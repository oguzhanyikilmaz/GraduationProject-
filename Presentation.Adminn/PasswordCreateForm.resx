<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAK4SURBVHhe5Ztr
        ThsxFIVnIS0VqDtBICq6Ox4qiAXlNVkClLS/iZRIKY8f9NzBB9rBQybjsX2vcqQjJY7Hut+xEyfRuKDK
        svw6mUyu4N/wE3wLn8M7ros5Se2OYQY/wr/gy/F4vOe6vAgN3/DCEn72eD6dTvddVzOSmqX2Ggu9xIQf
        VR3dzDfB03/gw+oCA8KEHqDe1T/1+7ysVgIeyLL3dajbRAgt4Suj74UEIO95bwePVYewCbzzTAJ4qDWu
        s8oQOsCL7yWAn7XGNlYVQkd48bUEcFZrbGsVIQTAP2MDOClGo9FnPGnaLtY5awgh8PDdYDD4VA3k9syu
        A2UJIRB+9e67TeCA91hO391Q0RVaK3zshvpfFkKIBk9pDiE6PKUxhGTwlKYQksNTGkLIBk/lDCE7PJUj
        BDXwVMoQ1MFTKUJQC0/FDEE9PBUjBDPwVJ8hmIOn+gjBLDwVAoBr5b/6Tf+So/PDU4Gz2MV64KmEIeiD
        pxKEoBeeihiCfngqQgh24KkeQ7AHT0kI2OsFwAfWxrJN2oQXbXUAW/0W2OoPwQjwtP4QIsLTekNIAE/r
        CyEhPK0nhEB42z+HA+ErgD7GcOWkVZ+FmwshRsFmQohZqPoQUhSoNoSUhakLIUdBakLIWUj2EDTMQrYa
        1CxBKHktmuCpZDVphKei16YZnopWowV4qvdaA2+WXklBbqhkCgzh7WZpPPiChq63y2eBpwJDmMtRATkw
        IefqfB3WOSs8FRICrj2VAOSApLfDB1YBTwWEcNPl0JQqeKpjCNWhKTlO6nvRZ5XwVIcQbiWAy1pjk1XD
        U5uEUJblD7lgD0/WHZ01AU+1DGExHA53qwuQxBEamkK4e3fAyIDcd5um7X0hzK7ri2QlwBd4UY6aywfj
        DTqdvB4tMyjZ58F0ChY5HCpMM1n2rzNfFMVfOkot7nN3/JEAAAAASUVORK5CYII=
</value>
  </data>
</root>